//
//  Persistence.swift
//  WorldCountries_SwiftUI_MVVM
//
//  Created by –î–∏–º–∞ on 05.12.2024.
//

import CoreData

/// –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Core Data –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
struct PersistenceController {
    
    /// Singleton-—ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    static let shared = PersistenceController()

    /// –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä NSPersistentContainer –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Core Data.
    let container: NSPersistentContainer

    /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PersistenceController.
    /// - Parameter inMemory: –£–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤ –ø–∞–º—è—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ç–µ—Å—Ç–æ–≤).
    init(inMemory: Bool = false) {
        container = NSPersistentContainer(name: "WorldCountries_SwiftUI_MVVM")
        
        let description = container.persistentStoreDescriptions.first
        
        let url = description?.url
        do {
            if let url = url {
                try FileManager.default.removeItem(at: url)
            }
        } catch {
            print("Failed to delete persistent store: \(error.localizedDescription)")
        }
        
        description?.shouldMigrateStoreAutomatically = true
        description?.shouldInferMappingModelAutomatically = true

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ (–µ—Å–ª–∏ inMemory = true)
        if inMemory {
            container.persistentStoreDescriptions.first?.url = URL(fileURLWithPath: "/dev/null")
        }

        // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö —Ö—Ä–∞–Ω–∏–ª–∏—â
        container.loadPersistentStores { (storeDescription, error) in
            if let error = error as NSError? {
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
                fatalError("Unresolved error \(error), \(error.userInfo)")
            }
        }

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–ª–∏—è–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        container.viewContext.automaticallyMergesChangesFromParent = true
    }
}

extension PersistenceController {
    static var preview: PersistenceController = {
        let controller = PersistenceController(inMemory: true)
        let context = controller.container.viewContext

        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        let exampleCountry = CountryEntity(context: context)
        exampleCountry.id = UUID()
        exampleCountry.name = "Japan"
        exampleCountry.region = "Asia"
        exampleCountry.flag = "üáØüáµ"
        exampleCountry.isFavorite = false

        let exampleDetails = CountryDetailingEntity(context: context)
        exampleDetails.id = exampleCountry.id
        exampleDetails.officialName = "Japan"
        exampleDetails.capital = "Tokyo"
        exampleDetails.population = 126000000
        exampleDetails.area = 377975.0
        exampleDetails.languages = "Japanese"
        exampleDetails.timezones = "UTC+09:00"
        exampleDetails.flagImage = "https://flagcdn.com/w320/jp.png"

        exampleCountry.countryDetailingEntityRel = exampleDetails

        do {
            try context.save()
        } catch {
            fatalError("Failed to create preview data: \(error.localizedDescription)")
        }

        return controller
    }()
}
